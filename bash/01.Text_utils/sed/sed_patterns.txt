
https://www.theunixschool.com/2014/08/sed-examples-remove-delete-chars-from-line-file.html
https://www.baeldung.com/linux/remove-text-after-x-in-file
https://www.ibm.com/docs/en/aix/7.2?topic=s-sed-command



-------------------------------------------------------------
Sed to remove everything after "." 

Either escape the . with a backslash to get a literal ., or use brackets to define a character class:

sed 's/\..*$//' data.txt > cleaned.txt
sed 's/[.].*$//' data.txt > cleaned.txt

-------------------------------------------------------------
https://www.baeldung.com/linux/awk-guide
https://stackoverflow.com/questions/45969954/extract-multiple-items-on-single-line-using-grep-sed-perl

https://stackoverflow.com/questions/31184609/parsing-fix-logs-for-stock-and-price-in-column-formats-using-grep-awk-unix-with
http://valurbansky.blogspot.com/2012/01/fix-logs-or-why-i-love-awk.html
https://unix.stackexchange.com/questions/446436/parsing-fix-messages-for-further-analytics



-------------------------------------------------------------
*Extract text between patterns

cat output.txt | sed -n '/0: jdbc:drill/, /0: jdbc:drill/p' | grep -v closing | grep -v "rows selected"
cat output.txt | sed -n '/0: jdbc:drill/, /0: jdbc:drill/p' | grep -Ev "closing|rows selected"
-------------------------------------------------------------
##Substituting Text

One of the most common operations in sed is text substitution. This is done using the s command. For example, to replace the first instance of a pattern abc with another pattern def, use:

sed s/abc/def/ ik.txt

Here, only the first instance of abc in each line is substituted with def. If you want to replace the third instance of a pattern, you can use:

sed s/abc/z/3 ik.txt
Global Substitutions

In a global substitution, all instances of a pattern are replaced. This is achieved by appending g to the substitute command. To replace all instances of abc with XYZ, use:

sed s/abc/XYZ/g ik.txt

You can also start the global replacement from the nth instance of the pattern by using /ng. For example, to replace all instances of abc with XYZ, starting from the third instance, use:

sed s/abc/XYZ/3g ik.txt
-------------------------------------------------------------
##Remove text between patterns
sed -i '/^XYZ/,/ZZZZZ/d' filename

-------------------------------------------------------------
##multiple replacements

01. Sequential Substitutions Using the -e Flag
sed -e 's/^[[:space:]]*//g' -e 's:/usr/bin/:/usr/local/bin/:g' -e 's/http/https/g' input_file

02. Substitution Separators
sed 's/^[[:space:]]*//g; s:/usr/bin/:/usr/local/bin/:g; s/http/https/g' input_file

03. Newline Separator
$ sed 's/^[[:space:]]*//g
>      s:/usr/bin/:/usr/local/bin/:g
>      s/http/https/g' input_file

04. Script File and the -f Flag
	$ cat script.sed
	s/^[[:space:]]*//g
	s:/usr/bin/:/usr/local/bin/:g
	s/http/https/g

	$ sed -f script.sed input_file
	
05. Script File With Shebang	
	cat script.sed
	#!/usr/bin/sed -f
	s/^[[:space:]]*//g
	s:/usr/bin/:/usr/local/bin/:g
	s/http/https/g

	$ chmod u+x script.sed
	$ ./script.sed input_file

	
-------------------------------------------------------------
https://www.baeldung.com/linux/sed-editor

##Ignore the First Line in a Data File

gnuplot> plot 'data.txt' skip 1 using 1:2 with lines
sed '1d' data.txt | gnuplot -p -e "plot '-' using 1:2 with lines"
head -n +2 data.txt | gnuplot -p -e "plot '-' using 1:2 with lines"

Gnuplot can handle data in various ways, including using the every modifier to skip the first line:

gnuplot> set xrange [0:4]
gnuplot> set yrange [0:40]
gnuplot> plot 'data.txt' every 1::1 using 1:2 with lines

-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------







